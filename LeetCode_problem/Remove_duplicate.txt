/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:

    void ListInsert (ListNode *& head , ListNode * &tail , int val)
    {
        ListNode *newNode = new ListNode(val);
        if (head == NULL)
        {
            head = newNode;
            tail = newNode;
            return;
        }
        tail->next = newNode;
        tail = newNode;
    }
    ListNode* removeElements(ListNode* head, int val) {

        while(head != NULL && head->val == val)
        {
            head = head->next;
        }
        if(head == NULL)
        {
            return head ;
        }
        ListNode * temp = head ;

        while(temp != NULL && temp->next != NULL)
        {
            if(temp->next->val == val)
            {
                temp->next = temp->next->next;
            }
            else
            {
                temp = temp->next;
            }
            
        }

        return head;
    }
};